{
  "AMBIGUOUS_FIELD_NAME" : {
    "message" : [ "Field name %s is ambiguous and has %s matching fields in the struct." ],
    "sqlState" : "42000"
  },
  "CANNOT_CREATE_COLUMNAR_READER" : {
    "message" : [ "Cannot create columnar reader." ],
    "sqlState" : "0A000"
  },
  "CANNOT_CREATE_JDBC_TABLE_WITH_PARTITIONS" : {
    "message" : [ "Cannot create JDBC table with partition" ],
    "sqlState" : "0A000"
  },
  "CANNOT_FIND_FILE" : {
    "message" : [ "%s \n It is possible the underlying files have been updated. You can explicitly invalidate the cache in Spark by recreating the Dataset/DataFrame involved." ]
  },
  "CANNOT_READ_PARQUET_FILE" : {
    "message" : [ "Encounter error while reading parquet files. One possible cause: Parquet column cannot be converted in the corresponding files. Details: " ]
  },
  "CANNOT_REMOVE_RESERVED_PROPERTY" : {
    "message" : [ "Cannot remove reserved property: %s" ]
  },
  "CANNOT_SPECIFY_BOTH_JDBC_TABLE_NAME_AND_QUERY" : {
    "message" : [ "Both '%s' and '%s' can not be specified at the same time." ]
  },
  "COMMIT_DENIED_ERROR" : {
    "message" : [ "Commit denied for partition %s (task %s, attempt %s, stage %s.%s)" ]
  },
  "CONCURRENT_QUERY_ERROR" : {
    "message" : [ "Another instance of this query was just started by a concurrent session." ]
  },
  "DIVIDE_BY_ZERO" : {
    "message" : [ "divide by zero" ],
    "sqlState" : "22012"
  },
  "DUPLICATE_KEY" : {
    "message" : [ "Found duplicate keys '%s'" ],
    "sqlState" : "23000"
  },
  "FAILED_RENAME_PATH" : {
    "message" : [ "Failed to rename %s to %s as destination already exists" ],
    "sqlState" : "22023"
  },
  "FAILED_SET_ORIGINAL_PERMISSION_BACK" : {
    "message" : [ "Failed to set original permission %s back to the created path: %s. Exception: %s" ]
  },
  "GROUPING_COLUMN_MISMATCH" : {
    "message" : [ "Column of grouping (%s) can't be found in grouping columns %s" ],
    "sqlState" : "42000"
  },
  "GROUPING_ID_COLUMN_MISMATCH" : {
    "message" : [ "Columns of grouping_id (%s) does not match grouping columns (%s)" ],
    "sqlState" : "42000"
  },
  "GROUPING_SIZE_LIMIT_EXCEEDED" : {
    "message" : [ "Grouping sets size cannot be greater than %s" ]
  },
  "IF_PARTITION_NOT_EXISTS_UNSUPPORTED" : {
    "message" : [ "Cannot write, IF NOT EXISTS is not supported for table: %s" ]
  },
  "INCOMPARABLE_PIVOT_COLUMN" : {
    "message" : [ "Invalid pivot column '%s'. Pivot columns must be comparable." ],
    "sqlState" : "42000"
  },
  "INCOMPATIBLE_DATASOURCE_REGISTER" : {
    "message" : [ "Detected an incompatible DataSourceRegister. Please remove the incompatible library from classpath or upgrade it. Error: %s" ]
  },
  "INDEX_OUT_OF_BOUNDS" : {
    "message" : [ "Index %s must be between 0 and the length of the ArrayData." ],
    "sqlState" : "22023"
  },
  "INVALID_FIELD_NAME" : {
    "message" : [ "Field name %s is invalid: %s is not a struct." ],
    "sqlState" : "42000"
  },
  "INVALID_FRACTION_OF_SECOND" : {
    "message" : [ "The fraction of sec must be zero. Valid range is [0, 60]." ],
    "sqlState" : "22023"
  },
  "INVALID_NAMESPACE_NAME" : {
    "message" : [ "Invalid namespace name: %s" ],
    "sqlState" : "42000"
  },
  "LENGTH_EXCEED_MAX_LENGTH" : {
    "message" : [ "The length of %s is %s, which exceeds the max length allowed: %s." ],
    "sqlState" : "42000"
  },
  "MISSING_COLUMN" : {
    "message" : [ "cannot resolve '%s' given input columns: [%s]" ],
    "sqlState" : "42000"
  },
  "MISSING_DATABASE_LOCATION" : {
    "message" : [ "Missing database location" ],
    "sqlState" : "42000"
  },
  "MISSING_METHOD" : {
    "message" : [ "A method named \"%s\" is not declared in any enclosing class nor any supertype" ],
    "sqlState" : "42000"
  },
  "MISSING_STATIC_PARTITION_COLUMN" : {
    "message" : [ "Unknown static partition column: %s" ],
    "sqlState" : "42000"
  },
  "NON_EMPTY_NAMESPACE" : {
    "message" : [ "Namespace %s is not empty" ],
    "sqlState" : "42000"
  },
  "NON_LITERAL_PIVOT_VALUES" : {
    "message" : [ "Literal expressions required for pivot values, found '%s'" ],
    "sqlState" : "42000"
  },
  "NON_PARTITION_COLUMN" : {
    "message" : [ "PARTITION clause cannot contain a non-partition column name: %s" ],
    "sqlState" : "42000"
  },
  "NON_RECORDS_FROM_EMPTY_DATA_READER" : {
    "message" : [ "No records should be returned from EmptyDataReader" ],
    "sqlState" : "42000"
  },
  "PIVOT_VALUE_DATA_TYPE_MISMATCH" : {
    "message" : [ "Invalid pivot value '%s': value data type %s does not match pivot column data type %s" ],
    "sqlState" : "42000"
  },
  "RENAME_SRC_PATH_NOT_FOUND" : {
    "message" : [ "Failed to rename as %s was not found" ],
    "sqlState" : "22023"
  },
  "SECOND_FUNCTION_ARGUMENT_NOT_INTEGER" : {
    "message" : [ "The second argument of '%s' function needs to be an integer." ],
    "sqlState" : "22023"
  },
  "UNABLE_TO_ACQUIRE_MEMORY" : {
    "message" : [ "Unable to acquire %s bytes of memory, got %s" ]
  },
  "UNRECOGNIZED_SQL_TYPE" : {
    "message" : [ "Unrecognized SQL type %s" ],
    "sqlState" : "42000"
  },
  "UNSUPPORTED_LITERAL_TYPE" : {
    "message" : [ "Unsupported literal type %s %s" ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_PARQUET_COLUMN_CONVERT" : {
    "message" : [ "Parquet column cannot be converted in file %s. Column: %s, Expected: %s, Found: %s" ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_PARTITION_TRANSFORM" : {
    "message" : [ "SessionCatalog does not support partition transform: %s" ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_TRANSACTION_BY_JDBC_SERVER" : {
    "message" : [ "The target JDBC server does not support transaction and can only support ALTER TABLE with a single action." ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_USER_SPECIFIED_SCHEMA" : {
    "message" : [ "user-specified schema" ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_WRITE_COLUMN" : {
    "message" : [ "Unsupported field name: %s" ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_WRITE_FOR_BINARY_FILE_DATASOURCE" : {
    "message" : [ "Write is not supported for binary file data source" ],
    "sqlState" : "0A000"
  },
  "UNSUPPORTED_WRITE_TABLE" : {
    "message" : [ "Table implementation does not support writes: %s" ],
    "sqlState" : "0A000"
  },
  "WRITING_JOB_ABORTED" : {
    "message" : [ "Writing job aborted" ],
    "sqlState" : "40000"
  },
  "WRITING_JOB_FAILED" : {
    "message" : [ "Writing job failed" ],
    "sqlState" : "40000"
  }
}